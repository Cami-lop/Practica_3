pwr.r.test(d=0.5,power = 0.80,sig.level = 0.05)
pwr.t.test(d=0.5,power = 0.80,sig.level = 0.05)
pwr.anova.test(k=4,f=0.5,sig.level = 0.05,power = 0.80)
#Ejercicio 5
getwd()
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(tempertura,serie)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
while(is.na(temperatura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
}
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(temperatura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(temp)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){   #puse el while para que se repita hasta que deje de cumplir la conicion de is.na
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en °C"))
}
serie<-c(serie,tempertura)
}
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
# de 1:8 pq es un dato cada 3 horas
for(temp in 1:8){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
repeat{
if(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}else{
break}
}
serie<-c(serie,tempertura)
}
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
source("~/.active-rstudio-document")
rm(list=ls())
serie<-c()
horas<-seq(0,21,by=3)
for(hs in horas){
tempertura<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(tempertura)){
temperatura<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
serie<-c(serie,tempertura)
}
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora<-0
for(t in temperatura){
if(t=temp_max) {
for(t in temperatura){
if(t==temp_max) {
hora<-hora+3
}
}
hora
hora<-0
for(t in temperatura){
repeat{
if(t!=temp_max){
hora<-hora+3
}else{
break
}
}
}
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora<-0
for(tf in temperatura){
repeat{
if(tf!=temp_max){
hora<-hora+3
}else{
break
}
}
}
print(hora)
hora.max<-horas[which.max(temperatura)]
for(hs in horas){
repeat{
if(hs!=hora.max){
hora<-hora+3
}else{
break
}
}
}
rm(list=ls())
temperatura<-c()
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
pos.max<-which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora.max<-horas[which.max(temperatura)]
hora<-0
for(hs in horas){
repeat{
if(hs!=hora.max){
hora<-hora+3
}else{
break
}
}
}
pos.max<-which.max(temperatura)
temp_max<-temperatura[which.max(temperatura)]
temp_max
#Ejercicio 5
getwd()
setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/")
rm(list=ls())
temperatura<-c()
horas<-seq(0,21,by=3)
for(hr in horas){
t<-as.numeric(readline("Ingrese un valor de temperatura en ºC"))
while(is.na(t)){
t<-as.numeric(readline("Ingrese la temperatura nuevamente en ºC"))
}
temperatura<-c(temperatura,t)
}
temp_max<-temperatura[which.max(temperatura)]
temp_max
hora.max<-horas[which.max(temperatura)]
print(paste("La temperatura maxima fue de",temp_max,"a la/s",hora.max,"hs"))
rm(list=ls())
getwd()
#setwd("/home/clinux01/Escritorio/CamiLabo/Practicas/Datos Practica 3-20231003/") compu facu
setwd("C:/Users/Fernando Cabrera/Desktop/Cami_Labo/Practicas/Datos Practica 3-20231003/")
#funcion para cambiar las unidades de las variables les T y Td
convertir_faren_centigrados <- function (Temperatura) {
t <- (Temperatura - 32) * 5/9
return(t)
}
resultados<-list()
dato_faltante<- -999.9  #defini el dato faltante
datos_estaciones<-read.table("estaciones.txt", header = FALSE)
for(i in 1:nrow(datos_estaciones)){
nombre_aeropuerto<-datos_estaciones[i, 1]
nombre_archivo <- paste0(nombre_aeropuerto,".txt")
datos_aero<-read.table(nombre_archivo,header = FALSE)
datos_aero[which(datos_aero==dato_faltante)]<-NA
datos_aero[[1]]<-NULL
colnames(datos_aero)[1]<-"Fecha"
colnames(datos_aero)[2]<-"Temperatura"
colnames(datos_aero)[3]<-"Td"
colnames(datos_aero)[4]<-"Presion"
datos_aero[,2]<-(convertir_faren_centigrados(datos_aero[,2]))
datos_aero[,3]<-convertir_faren_centigrados(datos_aero[,3])
listaestaciones<-list(c(Nombre=nombre_aeropuerto,
Latitud=datos_estaciones[i,2],
Longitud=datos_estaciones[i,3],
Altura=datos_estaciones[i,4],
Codigo=datos_estaciones[i,5],
as.list(datos_aero)))
resultados<-c(resultados, listaestaciones)
}
names(resultados)<-c("Azul","Aeroparque","Catamarca","Chilecito","Iguazu","Mendoza")
Resumen_datos<- function(datos_estaciones) {
for (estacion in datos_estaciones) {
nombre_estacion <- estacion[[1]]
datos <- unlist(estacion[-1])  # Elimina el primer elemento (nombre de la estación)
media <- mean(datos)
desviacion_estandar <- sd(datos)
valor_maximo <- max(datos)
valor_minimo <- min(datos)
fechas <- datos[seq(1, length(datos), by = 1)]
fecha_inicial <- min(fechas)
fecha_final <- max(fechas)
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(datos),"\n")
cat("Media:", media,"\n")
cat("Desviación Estándar:", desviacion_estandar,"\n")
cat("Valor Máximo:", valor_maximo,"\n" )
cat("Valor Mínimo:", valor_minimo,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
cat("Fecha Final:", fecha_final,"\n")
}
}
Resumen_datos(resultados)
Resumen_datos<- function(datos_estaciones) {
for (estacion in datos_estaciones) {
nombre_estacion <- estacion[[1]]
datos <- unlist(estacion[-1])  # Elimina el primer elemento (nombre de la estación)
media <- mean(datos)
desviacion_estandar <- sd(datos)
valor_maximo <- max(datos)
valor_minimo <- min(datos)
fechas <- datos[seq(1, length(datos), by = 1)]
fecha_inicial <- min(fechas)
fecha_final <- max(fechas)
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(datos),"\n")
cat("Media:", media,"\n")
cat("Desviación Estándar:", desviacion_estandar,"\n")
cat("Valor Máximo:", valor_maximo,"\n" )
cat("Valor Mínimo:", valor_minimo,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
cat("Fecha Final:", fecha_final,"\n")
}
}
Resumen_datos(resultados)
View(resultados)
View(resultados)
Resumen_datos<- function(datos_estaciones) {
c<-1
v<-0
for (estacion in datos_estaciones) {
nombre_estacion <- estacion[[1]]
datos <- unlist(estacion[-1])  # Elimina el primer elemento (nombre de la estación)
t_media <- mean(datos[[c]][v+7])
t_desvio_estandar <- sd(datos[[c]][v+7])
t_max <- max(datos[[c]][v+7])
t_min <- min(datos[[c]][v+7])
td_media <- mean(datos[[c]][v+8])
td_desvio_estandar <- sd(datos[[c]][v+8])
td_max <- max(datos[[c]][v+8])
td_min <- min(datos[[c]][v+8])
fechas <- datos[seq(1, length(datos), by = 1)]
fecha_inicial <- min(fechas[[c]][v+6])
fecha_final <- max(fechas[[c]][v+6])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(datos),"\n")
cat("Media T:",t_media ,"\n")
cat("Desvio Estándar T:",t_desvio_estandar ,"\n")
cat("Valor Máximo T :",t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:",td_media ,"\n")
cat("Desvio Estándar Td:",td_desvio_estandar ,"\n")
cat("Valor Máximo Td :",td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
cat("Fecha Final:", fecha_final,"\n")
c<-c+1
}
}
Resumen_datos(resultados)
Resumen_datos<- function(data_estaciones) {
c<-1
v<-0
for (estacion in data_estaciones) {
nombre_estacion <- estacion[[1]]
t_media <- mean(data_estaciones[[c]][v+7])
t_desvio_estandar <- sd(data_estaciones[[c]][v+7])
t_max <- max(data_estaciones[[c]][v+7])
t_min <- min(data_estaciones[[c]][v+7])
td_media <- mean(data_estaciones[[c]][v+8])
td_desvio_estandar <- sd(data_estaciones[[c]][v+8])
td_max <- max(data_estaciones[[c]][v+8])
td_min <- min(data_estaciones[[c]][v+8])
fecha_inicial <- min(data_estaciones[[c]][v+6])
fecha_final <- max(data_estaciones[[c]][v+6])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(datos),"\n")
cat("Media T:",t_media ,"\n")
cat("Desvio Estándar T:",t_desvio_estandar ,"\n")
cat("Valor Máximo T :",t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:",td_media ,"\n")
cat("Desvio Estándar Td:",td_desvio_estandar ,"\n")
cat("Valor Máximo Td :",td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
cat("Fecha Final:", fecha_final,"\n")
c<-c+1
}
}
Resumen_datos(resultados)
Resumen_datos<- function(data_estaciones) {
c<-1
v<-0
for (estacion in data_estaciones) {
nombre_estacion <- estacion[[1]]
t_media <- mean(data_estaciones[[c]][v+7])
t_desvio_estandar <- sd(data_estaciones[[c]][v+7])
t_max <- max(data_estaciones[[c]][v+7])
t_min <- min(data_estaciones[[c]][v+7])
td_media <- mean(data_estaciones[[c]][v+8])
td_desvio_estandar <- sd(data_estaciones[[c]][v+8])
td_max <- max(data_estaciones[[c]][v+8])
td_min <- min(data_estaciones[[c]][v+8])
fecha_inicial <- min(data_estaciones[[c]][v+6])
#fecha_final <- max([[c]][v+6])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(data_estaciones),"\n")
cat("Media T:",t_media ,"\n")
cat("Desvio Estándar T:",t_desvio_estandar ,"\n")
cat("Valor Máximo T :",t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:",td_media ,"\n")
cat("Desvio Estándar Td:",td_desvio_estandar ,"\n")
cat("Valor Máximo Td :",td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
#cat("Fecha Final:", fecha_final,"\n")
c<-c+1
}
}
Resumen_datos(resultados)
Resumen_datos<- function(data_estaciones) {
c<-1
v<-0
for (estacion in data_estaciones) {
nombre_estacion <- estacion[[1]]
t_media <- mean(data_estaciones[[c]][v+7],rm.na=TRUE)
t_desvio_estandar <- sd(data_estaciones[[c]][v+7],rm.na=TRUE)
t_max <- max(data_estaciones[[c]][v+7],rm.na=TRUE)
t_min <- min(data_estaciones[[c]][v+7],rm.na=TRUE)
td_media <- mean(data_estaciones[[c]][v+8],rm.na=TRUE)
td_desvio_estandar <- sd(data_estaciones[[c]][v+8],rm.na=TRUE)
td_max <- max(data_estaciones[[c]][v+8],rm.na=TRUE)
td_min <- min(data_estaciones[[c]][v+8],rm.na=TRUE)
fecha_inicial <- min(data_estaciones[[c]][v+6],rm.na=TRUE)
#fecha_final <- max([[c]][v+6])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(data_estaciones),"\n")
cat("Media T:",t_media ,"\n")
cat("Desvio Estándar T:",t_desvio_estandar ,"\n")
cat("Valor Máximo T :",t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:",td_media ,"\n")
cat("Desvio Estándar Td:",td_desvio_estandar ,"\n")
cat("Valor Máximo Td :",td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
#cat("Fecha Final:", fecha_final,"\n")
c<-c+1
}
}
Resumen_datos(resultados)
Resumen_datos<- function(data_estaciones) {
c<-1
v<-0
for (estacion in data_estaciones) {
nombre_estacion <- estacion[[1]]
t_media <- mean(as.numeric(data_estaciones[[c]][v+7],rm.na=TRUE))
t_desvio_estandar <- sd(as.numeric(data_estaciones[[c]][v+7],rm.na=TRUE))
t_max <- max(as.numeric(data_estaciones[[c]][v+7],rm.na=TRUE))
t_min <- min(as.numeric(data_estaciones[[c]][v+7],rm.na=TRUE))
td_media <- mean(as.numeric(data_estaciones[[c]][v+8],rm.na=TRUE))
td_desvio_estandar <- sd(as.numeric(data_estaciones[[c]][v+8],rm.na=TRUE))
td_max <- max(as.numeric(data_estaciones[[c]][v+8],rm.na=TRUE))
td_min <- min(as.numeric(data_estaciones[[c]][v+8],rm.na=TRUE))
fecha_inicial <- min(as.numeric(data_estaciones[[c]][v+6],rm.na=TRUE))
#fecha_final <- max([[c]][v+6])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(data_estaciones),"\n")
cat("Media T:",t_media ,"\n")
cat("Desvio Estándar T:",t_desvio_estandar ,"\n")
cat("Valor Máximo T :",t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:",td_media ,"\n")
cat("Desvio Estándar Td:",td_desvio_estandar ,"\n")
cat("Valor Máximo Td :",td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
#cat("Fecha Final:", fecha_final,"\n")
c<-c+1
}
}
Resumen_datos(resultados)
Resumen_datos <- function(data_estaciones) {
c <- 1
v <- 0
for (estacion in data_estaciones) {
nombre_estacion <- estacion[[1]]
t_media <- mean(estacion[[7]])
t_desvio_estandar <- sd(estacion[[7]])
t_max <- max(estacion[[7]])
t_min <- min(estacion[[7]])
td_media <- mean(estacion[[8]])
td_desvio_estandar <- sd(estacion[[8]])
td_max <- max(estacion[[8]])
td_min <- min(estacion[[8]])
fecha_inicial <- min(estacion[[6]])
fecha_final <- max(estacion[[6]])
cat("Estación:", nombre_estacion,"\n" )
cat("Cantidad de datos:", length(estacion[[7]]),"\n")
cat("Media T:", t_media ,"\n")
cat("Desvío Estándar T:", t_desvio_estandar ,"\n")
cat("Valor Máximo T:", t_max,"\n" )
cat("Valor Mínimo T:", t_min,"\n")
cat("Media Td:", td_media ,"\n")
cat("Desvío Estándar Td:", td_desvio_estandar ,"\n")
cat("Valor Máximo Td:", td_max,"\n" )
cat("Valor Mínimo Td:", td_min,"\n")
cat("Fecha Inicial:", fecha_inicial,"\n")
cat("Fecha Final:", fecha_final,"\n\n")
c <- c+1
}
}
Resumen_datos(resultados)
